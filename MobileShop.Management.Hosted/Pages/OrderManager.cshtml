@page
@using System.Net.Http.Headers
@using MobileShop.Shared.Constants
@using System.Text.Json
@model MobileShop.Management.Hosted.Pages.OrderManagerModel
@{
    ViewData["Title"] = "Order Manager";

    var _client = new HttpClient();
    var contentType = new MediaTypeWithQualityHeaderValue("application/json");
    _client.DefaultRequestHeaders.Accept.Add(contentType);
    var ApiUri = $"{UrlConstant.ApiBaseUrl}/api/";
    var option = new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true,
            };

}
<div id="preloder">
    <div class="loader"></div>
</div>
<section class="hero hero-normal">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
            </div>
            <div class="col-lg-9">
                <div class="hero__search">
                    <div class="hero__search__form">
                        <form asp-page-handler="Fillter" method="post">
                            <input type="text" placeholder="Customer name" name="fname">
                            <button type="submit" class="site-btn">SEARCH</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div class="container">
    <p style="color:Tomato;">@Model.message</p>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Customer Name</th>
                <th>Address</th>
                <th>Create date</th>
                <th>Shipping date</th>
                <th>Required date</th>
                <th>Discount(%)</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Orders)
            {
                try
                {
                    var response = await _client.GetAsync(ApiUri + $"account/get-account-id/{item.CustomerId}");
                    var strData = await response.Content.ReadAsStringAsync();
                    var customer = System.Text.Json.JsonSerializer.Deserialize<Account>(strData, option);

                    var response2 = await _client.GetAsync(ApiUri + $"coupon/get-all-coupon-id/{item.CouponId}");
                    var strData2 = await response2.Content.ReadAsStringAsync();
                    var coupon = System.Text.Json.JsonSerializer.Deserialize<Coupon>(strData2, option);

                    <tr>
                        <td>@customer.FullName</td>
                        <td>@item.Address</td>
                        <td>@item.CreateDate</td>
                        @if (item.ShippingDate.ToString().Equals(string.Empty))
                        {
                            if (item.Status != 0)
                            {
                                <td>
                                    <a href="OrderManager?fstore=startship&bid=@item.OrderId" style="color:Tomato;">Start Ship</a>
                                </td>
                            }
                            else
                            {
                                <td style="color:Tomato;">
                                    Start Ship
                                </td>
                            }
                        }
                        else
                        {
                            <td>@item.ShippingDate</td>
                        }

                        @if (item.RequiredDate.ToString().Equals(string.Empty))
                        {
                            <td style="color:Tomato;">Don't order</td>
                        }
                        else
                        {
                            <td>@item.RequiredDate</td>
                        }
                        <td>@coupon.DiscountPercent</td>

                        @if (item.Status == 0)
                        {
                            <td style="color:Tomato;">Doing</td>
                        }
                        @if (item.Status == 1)
                        {

                            <td style="color:Tomato;">Processing</td>
                        }
                        @if (item.Status == 2)
                        {

                            <td style="color:Tomato;">Shipping</td>
                        }
                        @if (item.Status == 3)
                        {

                            <td style="color:DodgerBlue;">Complete</td>
                        }
                    <td>
                        <a href="OrderManager?fstore=detailorder&bid=@item.OrderId" style="color:MediumSeaGreen;">Detail</a>
                    </td>
                    </tr>
            }catch (Exception ex)
                {
                   
                }
            }
        </tbody>
    </table>
</div>